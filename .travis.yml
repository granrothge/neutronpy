sudo: required
language: generic
matrix:
  include:
  - os: linux
    env: PYTHON_VERSION=2.6 NUMPY_VERSION=1.9.2 SCIPY_VERSION=0.15.1 MATPLOTLIB_VERSION=1.4.3
  - os: linux
    env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.10.2 SCIPY_VERSION=0.16.1 MATPLOTLIB_VERSION=1.5.1
  - os: linux
    env: PYTHON_VERSION=3.3 NUMPY_VERSION=1.9.2 SCIPY_VERSION=0.15.1 MATPLOTLIB_VERSION=1.4.3
  - os: linux
    env: PYTHON_VERSION=3.4 NUMPY_VERSION=1.10.2 SCIPY_VERSION=0.16.1 MATPLOTLIB_VERSION=1.5.1
  - os: linux
    env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.10.2 SCIPY_VERSION=0.16.1 MATPLOTLIB_VERSION=1.5.1
  - os: osx
    env: PYTHON_VERSION=2.6 NUMPY_VERSION=1.9.2 SCIPY_VERSION=0.15.1 MATPLOTLIB_VERSION=1.4.3
  - os: osx
    env: PYTHON_VERSION=2.7 NUMPY_VERSION=1.10.2 SCIPY_VERSION=0.16.1 MATPLOTLIB_VERSION=1.5.1
  - os: osx
    env: PYTHON_VERSION=3.3 NUMPY_VERSION=1.9.2 SCIPY_VERSION=0.15.1 MATPLOTLIB_VERSION=1.4.3
  - os: osx
    env: PYTHON_VERSION=3.4 NUMPY_VERSION=1.10.2 SCIPY_VERSION=0.16.1 MATPLOTLIB_VERSION=1.5.1
  - os: osx
    env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.10.2 SCIPY_VERSION=0.16.1 MATPLOTLIB_VERSION=1.5.1
cache: apt
addons:
  apt:
    packages:
      - libatlas-dev
      - libatlas-base-dev
      - liblapack-dev
      - gfortran
before_install:
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then  wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh; fi
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
install:
- conda create --yes -q -n test_environment python=$PYTHON_VERSION nomkl pip
  setuptools cython numpy=$NUMPY_VERSION scipy=$SCIPY_VERSION nose matplotlib=$MATPLOTLIB_VERSION
  six mock h5py
- conda install --yes -q -c https://conda.anaconda.org/dsdale24 pyqt5
- source activate test_environment
- pip install pep8 python-coveralls codecov ordereddict
- pip install -e . -q --no-deps
before_script: # configure a headless display to test plot generation
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
  export DISPLAY=:99.0;
  sh -e /etc/init.d/xvfb start;
  sleep 3;
  fi
script:
- nosetests --with-coverage --cover-package=neutronpy --logging-level=INFO
after_success:
- codecov
- coveralls
deploy:
  - provider: pypi
    user: davidfobes
    password:
      secure: DdjBSsRSENkuRtzzbCJMEwhO2RXkER1RrBqKLdH+2TeC0w+CiYqUf3x/h2yWs5IdNjf6Q5UWx68vau7ylJpESiQbiP++MGeKguEHQOiLcFhUDz/wxZCk20GsWNsox00ISALVF02nH1eq3mcVkKqCzt8WzNZ/Ioey+aHJI1KwrtU=
    on:
      tags: true
      branch: master
      condition: $TRAVIS_OS_NAME = "osx"
    distributions: bdist_wheel
  - provider: pypi
    user: davidfobes
    password:
      secure: DdjBSsRSENkuRtzzbCJMEwhO2RXkER1RrBqKLdH+2TeC0w+CiYqUf3x/h2yWs5IdNjf6Q5UWx68vau7ylJpESiQbiP++MGeKguEHQOiLcFhUDz/wxZCk20GsWNsox00ISALVF02nH1eq3mcVkKqCzt8WzNZ/Ioey+aHJI1KwrtU=
    on:
      tags: true
      branch: master
      condition: ($TRAVIS_OS_NAME = "osx") && ($PYTHON_VERSION = "3.5")
    distributions: sdist
notifications:
  slack:
    secure: qsq1keqgpaE8P2uziBCorm27rLwUet0FHsf4CKo92faxL9q4FfBYkGFBgcTvKuDsImNz7P3cvLRNDkCxoklKNBtSJmS8DPDLINJikDDm0Tll7oX3pXox+I/x487AkiwyI/xjRKoH7pO+v/iVLVfznL228ABeactMj8OTsccwO0Q=
